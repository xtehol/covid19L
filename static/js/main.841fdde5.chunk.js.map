{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","usState","province","county","stats","confirmed","deaths","updatedAt","CardList","usStates","map","s","index","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","data","this","filteredUsStates","filter","toLowerCase","includes","sortUsStates","sort","a","b","mostConfirmed","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,6BAAKD,EAAME,QAAQC,WACnB,6BAAKH,EAAME,QAAQE,SACnB,6CAAgBJ,EAAME,QAAQG,MAAMC,aACpC,0CAAaN,EAAME,QAAQG,MAAME,UACjC,+CAAkBP,EAAME,QAAQM,iBCJvBC,G,MAAW,SAACT,GAEvB,OACE,qBAAKC,UAAU,YAAf,SAEGD,EAAMU,SAASC,KAAI,SAACC,EAAGC,GAAJ,OAClB,cAAE,EAAF,CAAmBX,QAASU,GAAhBC,UCRPC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEf,UAAU,SACVgB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoDCG,G,wDAtDb,aAAe,IAAD,8BACZ,gBAoBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAnBtC,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,iDAOHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKT,SAAS,CAAEX,SAAUoB,S,oBAO5C,WACE,MAAkCC,KAAKN,MAA/Bf,EAAR,EAAQA,SAAUY,EAAlB,EAAkBA,YACZU,EAAmBtB,EAASuB,QAAO,SAAA/B,GAAO,OAC9CA,EAAQC,SAAS+B,cAAcC,SAASb,EAAYY,kBAGhDE,EAAeJ,EAClBrB,KAAI,SAAAT,GAAO,sBAAUA,MACrBmC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAElC,MAAMC,UAAYgC,EAAEjC,MAAMC,aACxCkC,EAAgBJ,EAAaH,QAAO,SAAAK,GAAC,OAAIA,IAAMF,EAAa,MAElE,OACE,sBAAKnC,UAAU,MAAf,UAEE,kDAEA,cAAC,EAAD,CACEc,YAAY,oBACZC,aAAce,KAAKf,eAErB,0DACA,cAAC,EAAD,CAAUN,SAAU8B,EAAevC,UAAU,WAC7C,+CACA,cAAC,EAAD,CAAUS,SAAUsB,W,GAjDVS,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.841fdde5.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css'\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <h2>{props.usState.province}</h2>\n    <h3>{props.usState.county}</h3>\n    <h4>confirmed: {props.usState.stats.confirmed}</h4>\n    <h4>deaths: {props.usState.stats.deaths}</h4>\n    <h4>last update: {props.usState.updatedAt}</h4>\n  </div>\n)","import React from 'react';\n\nimport { Card } from '../card/card.component';\n\nimport './card-list.styles.css';\n\nexport const CardList = (props) => {\n  // console.log('p=', props)\n  return (\n    <div className=\"card-list\"\n    >\n      {props.usStates.map((s, index) => (\n        < Card key={index} usState={s} />\n      ))}\n    </div>\n  )\n}","import React from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      usStates: [],\n      searchField: ''\n    };\n  };\n\n  componentDidMount() {\n    fetch('https://corona.lmao.ninja/v2/jhucsse/counties')\n      // fetch('https://api.covidtracking.com/v1/states/info.json')\n      // fetch('https://api.covidtracking.com/v1/states/daily.json')\n      // fetch('https://jsonplaceholder.typicode.com/users')\n      // .then(r => console.log(r))\n      // .then(r => r.json())\n      // .then(r => console.log(r))\n      .then(response => response.json())\n      .then(data => this.setState({ usStates: data }))\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { usStates, searchField } = this.state;\n    const filteredUsStates = usStates.filter(usState =>\n      usState.province.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    const sortUsStates = filteredUsStates\n      .map(usState => ({ ...usState }))\n      .sort((a, b) => b.stats.confirmed - a.stats.confirmed)\n    const mostConfirmed = sortUsStates.filter(a => a === sortUsStates[0]);\n\n    return (\n      <div className=\"App\">\n\n        <h1>COVID-19 Tracker</h1>\n\n        <SearchBox\n          placeholder=\"Search a US State\"\n          handleChange={this.handleChange}\n        />\n        <h4>The most confirmed city.</h4>\n        <CardList usStates={mostConfirmed} className=\"danger\" />\n        <h4>Search result</h4>\n        <CardList usStates={filteredUsStates} />\n      </div >\n    );\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}